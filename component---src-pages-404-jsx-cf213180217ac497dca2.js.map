{"version":3,"file":"component---src-pages-404-jsx-cf213180217ac497dca2.js","mappings":"2IAEA,MAAMA,EACK,uCADLA,EAEU,WAFVA,EAGC,oDA2CP,IAxCeC,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,OACEE,EAAAA,cAAA,OAAKC,UAAWJ,GACdG,EAAAA,cAAA,OACEC,UAAWJ,EACXK,MAAM,MACNC,OAAO,MACPC,KAAK,OACLC,QAAQ,eAERL,EAAAA,cAAA,YACEA,EAAAA,cAAA,WACEM,GAAG,uCACHC,EAAE,IACFC,EAAE,IACFN,MAAM,KACNC,OAAO,KACPM,aAAa,kBAEbT,EAAAA,cAAA,QACEO,EAAE,IACFC,EAAE,IACFN,MAAM,IACNC,OAAO,IACPF,UAAU,gBACVG,KAAK,cAIXJ,EAAAA,cAAA,QACEE,MAAM,MACNC,OAAO,MACPC,KAAK,gDAGTJ,EAAAA,cAAA,OAAKC,UAAWJ,GAAkBE,GAC9B,C,kECxCV,MAAMW,EAAMZ,IAAyC,IAADa,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOlB,EAC7C,MAAM,KAAEmB,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAgC,QAApBV,EAAGM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBK,MAClCM,EAAaN,EAAWA,EAAK,MAAMK,EAAiBA,EAE1D,OACErB,EAAAA,cAAAA,EAAAA,SAAA,KAAE,kBACgB,CACdc,QACA,SACKQ,EAAW,QACZ,CACJ,CACEC,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASF,GAEX,CACEG,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,eACTD,QAAQ,WAEV,CACEC,SAAS,kBACTD,SAA0B,QAAjBZ,EAAAK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBc,SAAM,IAEpC,CACED,SAAS,gBACTD,QAASF,GAEX,CACEG,SAAS,sBACTD,QAASL,IAEXQ,OAAOZ,GACR,EAIPL,EAAIkB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAGdH,EAAImB,UAAY,CACdhB,YAAaiB,IAAAA,OACbhB,KAAMgB,IAAAA,OACNf,KAAMe,IAAAA,QAAkBA,IAAAA,QACxBd,MAAOc,IAAAA,QAGT,K,0EC1EA,MAAMjC,EACG,oBADHA,EAEE,YAiBR,UAdqBkC,IACnB/B,EAAAA,cAACgC,EAAAA,EAAM,KACLhC,EAAAA,cAACU,EAAAA,EAAG,CAACM,MAAM,cACXhB,EAAAA,cAAA,MAAIC,UAAWJ,GAAe,kBAC9BG,EAAAA,cAAA,SAAG,2CACwC,IACzCA,EAAAA,cAACiC,EAAAA,KAAI,CAAChC,UAAWJ,EAAcqC,GAAG,KAAI,oBAE/B,K","sources":["webpack://claytsay.github.io/./src/components/layout/index.jsx","webpack://claytsay.github.io/./src/components/seo/index.jsx","webpack://claytsay.github.io/./src/pages/404.jsx"],"sourcesContent":["import React from 'react';\n\nconst classes = {\n  wrapper: 'p-8 relative max-w-screen-xl xs:p-24',\n  outerWrapper: 'relative',\n  svg: 'hidden fixed transform right-0 top-5 z-0 xl:block',\n};\n\nconst Layout = ({ children }) => {\n  return (\n    <div className={classes.outerWrapper}>\n      <svg\n        className={classes.svg}\n        width=\"404\"\n        height=\"784\"\n        fill=\"none\"\n        viewBox=\"0 0 404 784\"\n      >\n        <defs>\n          <pattern\n            id=\"5d0dd344-b041-4d26-bec4-8d33ea57ec9b\"\n            x=\"0\"\n            y=\"0\"\n            width=\"20\"\n            height=\"20\"\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <rect\n              x=\"0\"\n              y=\"0\"\n              width=\"4\"\n              height=\"4\"\n              className=\"text-gray-200\"\n              fill=\"#edf2f7\"\n            />\n          </pattern>\n        </defs>\n        <rect\n          width=\"404\"\n          height=\"784\"\n          fill=\"url(#5d0dd344-b041-4d26-bec4-8d33ea57ec9b)\"\n        />\n      </svg>\n      <div className={classes.wrapper}>{children}</div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useStaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n  const finalTitle = title ? `${title} | ${defaultTitle}` : defaultTitle;\n\n  return (\n    <>\n      htmlAttributes={{\n        lang,\n      }}\n      title={finalTitle}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: finalTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          property: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          property: `twitter:title`,\n          content: finalTitle,\n        },\n        {\n          property: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    </>\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nexport default SEO;\nexport const Head = () => (\n  <SEO />\n);\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"names":["classes","_ref","children","React","className","width","height","fill","viewBox","id","x","y","patternUnits","SEO","_site$siteMetadata","_site$siteMetadata2","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","finalTitle","name","content","property","author","concat","defaultProps","propTypes","PropTypes","NotFoundPage","Layout","Link","to"],"sourceRoot":""}